spring:
  application:
    name: consumer
  batch:
    jdbc:
      initialize-schema: always
  main:
    allow-bean-definition-overriding: true
  datasource:
    url: jdbc:postgresql://${INFRA_POSTGRES_HOST:localhost}:${INFRA_POSTGRES_PORT:5432}/stocks
    username: root
    password: root
    driver-class-name: org.postgresql.Driver
  datasource-batch:
    url: jdbc:h2:mem:batchjobs;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=PostgreSQL
    username: sa
    password: password
    driver-class-name: org.h2.Driver
    initialization-mode: always
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
producer:
  stock-instruments: "GOOGL,AAPL,TSLA,NVDA,AMD,AMZN,INTC,MSFT,UBER,ADBE,CSCO"
infrastructure:
  kafka_brokers: ${INFRA_KAFKA_BROKERS:localhost:9092}
  topics:
    price-changes: stock-prices
    orders-placed: orders
  redis:
    host: localhost
    port: 6379
    keys:
      stocks: "stocks"
      indices: "indices"
      portfolio: "portfolio"

management:
  endpoint:
    metrics:
      enabled: true
  endpoints:
    enabled-by-default: true
    web:
      exposure:
        include: '*'
  tracing:
    enabled: true
    sampling:
      probability: 1.0
  metrics:
    distribution:
      percentiles-histogram:
        http:
          requests: true
    tracing:
      endpoint: http://localhost:9411/api/v2/spans